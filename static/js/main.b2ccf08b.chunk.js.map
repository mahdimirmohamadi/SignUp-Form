{"version":3,"sources":["components/toast.js","components/SignUp.js","components/validate.js","App.js","index.js","components/SignUp.module.css"],"names":["notify","text","type","toast","success","error","SignUp","useState","name","email","password","confirmPassword","isAccepted","data","setData","errors","setErrors","touched","setTouched","useEffect","trim","test","length","validate","changeHandler","event","target","checked","value","focusHandler","className","styles","container","onSubmit","preventDefault","Object","keys","formContainer","header","formField","uncompleted","formInput","onChange","onFocus","checkBoxContainer","formButtons","href","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"6PAEaA,EAAS,SAACC,EAAMC,GACd,YAATA,EACFC,IAAMC,QAAQH,GAEdE,IAAME,MAAMJ,I,OCkJDK,EAhJA,WACb,MAAwBC,mBAAS,CAC/BC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,YAAY,IALd,mBAAOC,EAAP,KAAaC,EAAb,KAOA,EAA4BP,mBAAS,IAArC,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAA8BT,mBAAS,IAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRH,ECpBoB,SAACH,GACvB,IAAIE,EAAS,GAoCb,OAlCKF,EAAKL,KAAKY,cAGNL,EAAOP,KAFdO,EAAOP,KAAO,oBAIXK,EAAKJ,MAEE,eAAeY,KAAKR,EAAKJ,cAG5BM,EAAON,MAFdM,EAAON,MAAQ,0BAFfM,EAAON,MAAQ,iBAOZI,EAAKH,SAECG,EAAKH,SAASY,OAAS,EAChCP,EAAOL,SAAW,mDAEXK,EAAOL,SAJdK,EAAOL,SAAW,uBAOfG,EAAKF,gBAECE,EAAKF,kBAAoBE,EAAKH,SACvCK,EAAOJ,gBAAkB,iCAElBI,EAAOJ,gBAJdI,EAAOJ,gBAAkB,wBAOvBE,EAAKD,kBACAG,EAAOH,WAEdG,EAAOH,WAAa,gCAEfG,EDjBKQ,CAASV,MAElB,CAACA,EAAMI,IAEV,IAAMO,EAAgB,SAACC,GACK,eAAtBA,EAAMC,OAAOlB,KACfM,EAAQ,2BAAKD,GAAN,kBAAaY,EAAMC,OAAOlB,KAAOiB,EAAMC,OAAOC,WAErDb,EAAQ,2BAAKD,GAAN,kBAAaY,EAAMC,OAAOlB,KAAOiB,EAAMC,OAAOE,UAKnDC,EAAe,SAACJ,GACpBP,EAAW,2BAAKD,GAAN,kBAAgBQ,EAAMC,OAAOlB,MAAO,MAqBhD,OACE,sBAAKsB,UAAWC,IAAOC,UAAvB,UACE,uBAAMC,SAnBY,SAACR,GACrBA,EAAMS,iBAC6B,IAA/BC,OAAOC,KAAKrB,GAAQO,OACtBtB,EAAO,6BAA8B,YAErCA,EAAO,gBAAiB,SAExBkB,EAAW,CACTV,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,iBAAiB,EACjBC,YAAY,MAOiBkB,UAAWC,IAAOM,cAAjD,UACE,oBAAIP,UAAWC,IAAOO,OAAtB,qBACA,sBAAKR,UAAWC,IAAOQ,UAAvB,UACE,yCACA,uBACET,UACEf,EAAOP,MAAQS,EAAQT,KACnBuB,IAAOS,YACPT,IAAOU,UAEbvC,KAAK,OACLM,KAAK,OACLoB,MAAOf,EAAKL,KACZkC,SAAUlB,EACVmB,QAASd,IAEVd,EAAOP,MAAQS,EAAQT,MAAQ,+BAAOO,EAAOP,UAEhD,sBAAKsB,UAAWC,IAAOQ,UAAvB,UACE,0CACA,uBACET,UACEf,EAAON,OAASQ,EAAQR,MACpBsB,IAAOS,YACPT,IAAOU,UAEbvC,KAAK,OACLM,KAAK,QACLoB,MAAOf,EAAKJ,MACZiC,SAAUlB,EACVmB,QAASd,IAEVd,EAAON,OAASQ,EAAQR,OAAS,+BAAOM,EAAON,WAElD,sBAAKqB,UAAWC,IAAOQ,UAAvB,UACE,6CACA,uBACET,UACEf,EAAOL,UAAYO,EAAQP,SACvBqB,IAAOS,YACPT,IAAOU,UAEbvC,KAAK,WACLM,KAAK,WACLoB,MAAOf,EAAKH,SACZgC,SAAUlB,EACVmB,QAASd,IAEVd,EAAOL,UAAYO,EAAQP,UAC1B,+BAAOK,EAAOL,cAGlB,sBAAKoB,UAAWC,IAAOQ,UAAvB,UACE,qDACA,uBACET,UACEf,EAAOJ,iBAAmBM,EAAQN,gBAC9BoB,IAAOS,YACPT,IAAOU,UAEbvC,KAAK,WACLM,KAAK,kBACLoB,MAAOf,EAAKF,gBACZ+B,SAAUlB,EACVmB,QAASd,IAEVd,EAAOJ,iBAAmBM,EAAQN,iBACjC,+BAAOI,EAAOJ,qBAGlB,sBAAKmB,UAAWC,IAAOQ,UAAvB,UACE,sBAAKT,UAAWC,IAAOa,kBAAvB,UACE,oEACA,uBACE1C,KAAK,WACLM,KAAK,aACLoB,MAAOf,EAAKD,WACZ8B,SAAUlB,EACVmB,QAASd,OAGZd,EAAOH,YAAcK,EAAQL,YAC5B,+BAAOG,EAAOH,gBAGlB,sBAAKkB,UAAWC,IAAOc,YAAvB,UACE,mBAAGC,KAAK,IAAR,mBACA,wBAAQ5C,KAAK,SAAb,2BAGJ,cAAC,IAAD,QEvIS6C,MARf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCFNkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U,kBCN1BC,EAAOC,QAAU,CAAC,UAAY,0BAA0B,cAAgB,8BAA8B,OAAS,uBAAuB,UAAY,0BAA0B,UAAY,0BAA0B,YAAc,4BAA4B,YAAc,4BAA4B,kBAAoB,qC","file":"static/js/main.b2ccf08b.chunk.js","sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nexport const notify = (text, type) => {\r\n  if (type === \"success\") {\r\n    toast.success(text);\r\n  } else {\r\n    toast.error(text);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport styles from \"./SignUp.module.css\";\r\n\r\nimport { validate } from \"./validate\";\r\nimport { notify } from \"./toast\";\r\n\r\nconst SignUp = () => {\r\n  const [data, setData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    isAccepted: false,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [touched, setTouched] = useState({});\r\n\r\n  useEffect(() => {\r\n    setErrors(validate(data));\r\n    // console.log(errors);\r\n  }, [data, touched]);\r\n\r\n  const changeHandler = (event) => {\r\n    if (event.target.name === \"isAccepted\") {\r\n      setData({ ...data, [event.target.name]: event.target.checked });\r\n    } else {\r\n      setData({ ...data, [event.target.name]: event.target.value });\r\n    }\r\n    // console.log(data);\r\n  };\r\n\r\n  const focusHandler = (event) => {\r\n    setTouched({ ...touched, [event.target.name]: true });\r\n    // console.log(touched);\r\n  };\r\n\r\n  const submithandler = (event) => {\r\n    event.preventDefault();\r\n    if (Object.keys(errors).length === 0) {\r\n      notify(\"You Signed Up successfully\", \"success\");\r\n    } else {\r\n      notify(\"invalid data!\", \"error\");\r\n\r\n      setTouched({\r\n        name: true,\r\n        email: true,\r\n        password: true,\r\n        confirmPassword: true,\r\n        isAccepted: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <form onSubmit={submithandler} className={styles.formContainer}>\r\n        <h2 className={styles.header}>Sign Up</h2>\r\n        <div className={styles.formField}>\r\n          <label>Name</label>\r\n          <input\r\n            className={\r\n              errors.name && touched.name\r\n                ? styles.uncompleted\r\n                : styles.formInput\r\n            }\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={data.name}\r\n            onChange={changeHandler}\r\n            onFocus={focusHandler}\r\n          />\r\n          {errors.name && touched.name && <span>{errors.name}</span>}\r\n        </div>\r\n        <div className={styles.formField}>\r\n          <label>Email</label>\r\n          <input\r\n            className={\r\n              errors.email && touched.email\r\n                ? styles.uncompleted\r\n                : styles.formInput\r\n            }\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={data.email}\r\n            onChange={changeHandler}\r\n            onFocus={focusHandler}\r\n          />\r\n          {errors.email && touched.email && <span>{errors.email}</span>}\r\n        </div>\r\n        <div className={styles.formField}>\r\n          <label>Password</label>\r\n          <input\r\n            className={\r\n              errors.password && touched.password\r\n                ? styles.uncompleted\r\n                : styles.formInput\r\n            }\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={data.password}\r\n            onChange={changeHandler}\r\n            onFocus={focusHandler}\r\n          />\r\n          {errors.password && touched.password && (\r\n            <span>{errors.password}</span>\r\n          )}\r\n        </div>\r\n        <div className={styles.formField}>\r\n          <label>Confirm Password</label>\r\n          <input\r\n            className={\r\n              errors.confirmPassword && touched.confirmPassword\r\n                ? styles.uncompleted\r\n                : styles.formInput\r\n            }\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            value={data.confirmPassword}\r\n            onChange={changeHandler}\r\n            onFocus={focusHandler}\r\n          />\r\n          {errors.confirmPassword && touched.confirmPassword && (\r\n            <span>{errors.confirmPassword}</span>\r\n          )}\r\n        </div>\r\n        <div className={styles.formField}>\r\n          <div className={styles.checkBoxContainer}>\r\n            <label>I accet terms of privacy policy</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"isAccepted\"\r\n              value={data.isAccepted}\r\n              onChange={changeHandler}\r\n              onFocus={focusHandler}\r\n            />\r\n          </div>\r\n          {errors.isAccepted && touched.isAccepted && (\r\n            <span>{errors.isAccepted}</span>\r\n          )}\r\n        </div>\r\n        <div className={styles.formButtons}>\r\n          <a href=\"#\">Login</a>\r\n          <button type=\"submit\">Sign Up</button>\r\n        </div>\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","export const validate = (data) => {\r\n  let errors = {};\r\n\r\n  if (!data.name.trim()) {\r\n    errors.name = \"UserName Required\";\r\n  } else {\r\n    delete errors.name;\r\n  }\r\n  if (!data.email) {\r\n    errors.email = \"Email Required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\r\n    errors.email = \"Email Adress is Invalid\";\r\n  } else {\r\n    delete errors.email;\r\n  }\r\n\r\n  if (!data.password) {\r\n    errors.password = \"Password is Required\";\r\n  } else if (data.password.length < 6) {\r\n    errors.password = \"Password needs to be 6 characters or more\";\r\n  } else {\r\n    delete errors.password;\r\n  }\r\n\r\n  if (!data.confirmPassword) {\r\n    errors.confirmPassword = \"Confirm your Password\";\r\n  } else if (data.confirmPassword !== data.password) {\r\n    errors.confirmPassword = \"Passwords Do Not Match!\";\r\n  } else {\r\n    delete errors.confirmPassword;\r\n  }\r\n\r\n  if (data.isAccepted) {\r\n    delete errors.isAccepted;\r\n  } else {\r\n    errors.isAccepted = \"Please Accept our Regulations\";\r\n  }\r\n  return errors;\r\n};\r\n","import \"./App.css\";\n\nimport SignUp from \"./components/SignUp\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SignUp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SignUp_container__3YRF6\",\"formContainer\":\"SignUp_formContainer__3HSQo\",\"header\":\"SignUp_header__1lftD\",\"formField\":\"SignUp_formField__1eOia\",\"formInput\":\"SignUp_formInput__3UeUL\",\"uncompleted\":\"SignUp_uncompleted__3P6HO\",\"formButtons\":\"SignUp_formButtons__FONnB\",\"checkBoxContainer\":\"SignUp_checkBoxContainer__3KQ4a\"};"],"sourceRoot":""}